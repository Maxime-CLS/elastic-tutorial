<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Avancé on Elastic Tutoriel</title><link>https://maxime-cls.github.io/elastic-tutorial/elastic/avance/</link><description>Recent content in Avancé on Elastic Tutoriel</description><generator>Hugo -- gohugo.io</generator><language>fr-FR</language><lastBuildDate>Mon, 04 May 2020 08:52:59 +0200</lastBuildDate><atom:link href="https://maxime-cls.github.io/elastic-tutorial/elastic/avance/index.xml" rel="self" type="application/rss+xml"/><item><title>Bonus - Fleet &amp; Elastic Agent</title><link>https://maxime-cls.github.io/elastic-tutorial/elastic/avance/fleet/</link><pubDate>Fri, 26 Jun 2020 15:17:20 +0200</pubDate><guid>https://maxime-cls.github.io/elastic-tutorial/elastic/avance/fleet/</guid><description>Serveur Fleet Fleet Server est un composant de la pile Elastic utilisé pour gérer de manière centralisée les agents Elastic. Il est lancé en tant que partie d&amp;rsquo;un agent Elastic sur un hôte destiné à servir de serveur. Un processus Fleet Server peut prendre en charge de nombreuses connexions d&amp;rsquo;agents Elastic et sert de plan de contrôle pour la mise à jour des stratégies d&amp;rsquo;agents, la collecte d&amp;rsquo;informations d&amp;rsquo;état et la coordination des actions entre les agents Elastic.</description></item><item><title>Labs - Query niveau I</title><link>https://maxime-cls.github.io/elastic-tutorial/elastic/avance/term/</link><pubDate>Wed, 29 Apr 2020 10:10:47 +0200</pubDate><guid>https://maxime-cls.github.io/elastic-tutorial/elastic/avance/term/</guid><description>Préparation PUT /shakespeare { &amp;#34;mappings&amp;#34;: { &amp;#34;properties&amp;#34;: { &amp;#34;speaker&amp;#34;: {&amp;#34;type&amp;#34;: &amp;#34;keyword&amp;#34;}, &amp;#34;play_name&amp;#34;: {&amp;#34;type&amp;#34;: &amp;#34;keyword&amp;#34;}, &amp;#34;line_id&amp;#34;: {&amp;#34;type&amp;#34;: &amp;#34;integer&amp;#34;}, &amp;#34;speech_number&amp;#34;: {&amp;#34;type&amp;#34;: &amp;#34;integer&amp;#34;} } } } curl -H &amp;#39;Content-Type: application/x-ndjson&amp;#39; -XPOST &amp;#39;localhost:9200/bank/account/_bulk?pretty&amp;#39; --data-binary @accounts.json curl -H &amp;#39;Content-Type: application/x-ndjson&amp;#39; -XPOST &amp;#39;localhost:9200/shakespeare/doc/_bulk?pretty&amp;#39; --data-binary @shakespeare_6.0.json GET _cat/nodes?v GET _cat/indices?v ## API Search Recherche plusieurs terms (match) GET _search { &amp;ldquo;query&amp;rdquo;: { &amp;ldquo;match&amp;rdquo;: { &amp;ldquo;text_entry&amp;rdquo;: &amp;ldquo;to be or not to be&amp;rdquo; } } }
Recherche une phrase en entière (match phrase) GET _search { &amp;ldquo;query&amp;rdquo;: { &amp;ldquo;match_phrase&amp;rdquo;: { &amp;ldquo;text_entry&amp;rdquo;: &amp;ldquo;to be or not to be&amp;rdquo; } } }</description></item><item><title>Labs - Query Sort</title><link>https://maxime-cls.github.io/elastic-tutorial/elastic/avance/sort/</link><pubDate>Wed, 29 Apr 2020 10:10:47 +0200</pubDate><guid>https://maxime-cls.github.io/elastic-tutorial/elastic/avance/sort/</guid><description>Préparation PUT /shakespeare { &amp;#34;mappings&amp;#34;: { &amp;#34;properties&amp;#34;: { &amp;#34;speaker&amp;#34;: {&amp;#34;type&amp;#34;: &amp;#34;keyword&amp;#34;}, &amp;#34;play_name&amp;#34;: {&amp;#34;type&amp;#34;: &amp;#34;keyword&amp;#34;}, &amp;#34;line_id&amp;#34;: {&amp;#34;type&amp;#34;: &amp;#34;integer&amp;#34;}, &amp;#34;speech_number&amp;#34;: {&amp;#34;type&amp;#34;: &amp;#34;integer&amp;#34;} } } } curl -H &amp;#39;Content-Type: application/x-ndjson&amp;#39; -XPOST &amp;#39;localhost:9200/bank/account/_bulk?pretty&amp;#39; --data-binary @accounts.json curl -H &amp;#39;Content-Type: application/x-ndjson&amp;#39; -XPOST &amp;#39;localhost:9200/shakespeare/doc/_bulk?pretty&amp;#39; --data-binary @shakespeare_6.0.json GET _cat/nodes?v GET _cat/indices?v ## Sort Recherche un terms via un boolean GET bank/_search { &amp;ldquo;sort&amp;rdquo;: [ { &amp;ldquo;account_number&amp;rdquo;: { &amp;ldquo;order&amp;rdquo;: &amp;ldquo;asc&amp;rdquo; } } ] }
Recherche un terms via un boolean GET bank/_search { &amp;ldquo;sort&amp;rdquo;: [ { &amp;ldquo;account_number&amp;rdquo;: { &amp;ldquo;order&amp;rdquo;: &amp;ldquo;desc&amp;rdquo; } } ] }</description></item><item><title>Labs - Query niveau II</title><link>https://maxime-cls.github.io/elastic-tutorial/elastic/avance/query/</link><pubDate>Wed, 29 Apr 2020 10:10:47 +0200</pubDate><guid>https://maxime-cls.github.io/elastic-tutorial/elastic/avance/query/</guid><description>Préparation PUT /shakespeare { &amp;#34;mappings&amp;#34;: { &amp;#34;properties&amp;#34;: { &amp;#34;speaker&amp;#34;: {&amp;#34;type&amp;#34;: &amp;#34;keyword&amp;#34;}, &amp;#34;play_name&amp;#34;: {&amp;#34;type&amp;#34;: &amp;#34;keyword&amp;#34;}, &amp;#34;line_id&amp;#34;: {&amp;#34;type&amp;#34;: &amp;#34;integer&amp;#34;}, &amp;#34;speech_number&amp;#34;: {&amp;#34;type&amp;#34;: &amp;#34;integer&amp;#34;} } } } curl -H &amp;#39;Content-Type: application/x-ndjson&amp;#39; -XPOST &amp;#39;localhost:9200/bank/account/_bulk?pretty&amp;#39; --data-binary @accounts.json curl -H &amp;#39;Content-Type: application/x-ndjson&amp;#39; -XPOST &amp;#39;localhost:9200/shakespeare/doc/_bulk?pretty&amp;#39; --data-binary @shakespeare_6.0.json GET _cat/nodes?v GET _cat/indices?v ## API Search Recherche un terms via un boolean GET _search { &amp;ldquo;query&amp;rdquo;: { &amp;ldquo;bool&amp;rdquo;: { &amp;ldquo;must&amp;rdquo;: [ { &amp;ldquo;term&amp;rdquo;: { &amp;ldquo;gender.keyword&amp;rdquo;: { &amp;ldquo;value&amp;rdquo;: &amp;ldquo;F&amp;rdquo; } } } ] } } }</description></item><item><title>TP : Définir et exécuter des requêtes de recherche dans Elasticsearch</title><link>https://maxime-cls.github.io/elastic-tutorial/elastic/avance/tp_query/</link><pubDate>Wed, 29 Apr 2020 10:10:47 +0200</pubDate><guid>https://maxime-cls.github.io/elastic-tutorial/elastic/avance/tp_query/</guid><description>Description Savoir comment collecter, analyser, enrichir et indexer des données dans Elasticsearch est important, mais savoir comment poser des questions précises sur les données est encore plus crucial. Après tout, vous ne pouvez pas épeler &amp;ldquo;Elasticsearch&amp;rdquo; sans &amp;ldquo;recherche&amp;rdquo; ! Que vous utilisiez Elasticsearch pour la recherche de sites, la recherche de produits, l&amp;rsquo;analyse opérationnelle ou la veille stratégique, savoir formuler des requêtes de recherche complexes est essentiel pour tirer de la valeur de toutes ces données que vous avez réussi à collecter, analyser, enrichir et indexer.</description></item></channel></rss>