<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Elastic Tutoriel</title><link>https://maxime-cls.github.io/elastic-tutorial/</link><description>Recent content on Elastic Tutoriel</description><generator>Hugo -- gohugo.io</generator><language>fr-FR</language><lastBuildDate>Fri, 26 Jun 2020 15:17:20 +0200</lastBuildDate><atom:link href="https://maxime-cls.github.io/elastic-tutorial/index.xml" rel="self" type="application/rss+xml"/><item><title>APM</title><link>https://maxime-cls.github.io/elastic-tutorial/elastic/intermediare/fleet/</link><pubDate>Fri, 26 Jun 2020 15:17:20 +0200</pubDate><guid>https://maxime-cls.github.io/elastic-tutorial/elastic/intermediare/fleet/</guid><description>Serveur Fleet Ajoutez les deux services ci-dessous dans le fichier elastic-docker-tls.yml :
package-registry:
image: docker.elastic.co/package-registry/distribution:${VERSION}
container_name: package-registry
ports:
- 443
environment:
- EPR_ADDRESS=0.0.0.0:443
- EPR_TLS_KEY=$CERTS_DIR/package-registry/package-registry.key
- EPR_TLS_CERT=$CERTS_DIR/package-registry/package-registry.crt
healthcheck:
test: curl --cacert $CERTS_DIR/ca/ca.crt -s https://localhost/health &amp;gt;/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
retries: 100
interval: 5s
volumes:
- certs:$CERTS_DIR
networks:
- elastic
fleet-server:
image: docker.elastic.co/beats/elastic-agent:${VERSION}
container_name: fleet-server
ports:
- 8220:8220
healthcheck:
test: [&amp;quot;CMD-SHELL&amp;quot;, &amp;quot;curl -s -k https://localhost:8220/api/status | grep -q 'HEALTHY'&amp;quot;]
retries: 300
interval: 1s
environment:
FLEET_SERVER_ENABLE: &amp;quot;1&amp;quot;
ELASTICSEARCH_HOST: &amp;quot;https://es01:9200&amp;quot;
ELASTICSEARCH_CA: $CERTS_DIR/ca/ca.</description></item><item><title>Installation</title><link>https://maxime-cls.github.io/elastic-tutorial/elastic/prerequis/installation/</link><pubDate>Fri, 26 Jun 2020 15:17:20 +0200</pubDate><guid>https://maxime-cls.github.io/elastic-tutorial/elastic/prerequis/installation/</guid><description>Prérequis Ubuntu ou Debian Docker Exécuter la commande ci-dessous sudo sysctl -w vm.max_map_count=262144
Déployer la stack Elasticsearch Kibana dans Docker avec TLS activé Si les fonctions de sécurité sont activées, vous devez configurer le chiffrement TLS (Transport Layer Security) pour la couche de transport d&amp;rsquo;Elasticsearch. Bien qu&amp;rsquo;il soit possible d&amp;rsquo;utiliser une licence d&amp;rsquo;essai sans configurer TLS, nous vous conseillons de sécuriser votre pile dès le départ.
Pour obtenir un cluster Elasticsearch et Kibana opérationnel dans Docker avec la sécurité activée, vous pouvez utiliser Docker Compose :</description></item><item><title>Lab - Logs</title><link>https://maxime-cls.github.io/elastic-tutorial/elastic/d%C3%A9butant/lab_logs/</link><pubDate>Fri, 26 Jun 2020 15:17:20 +0200</pubDate><guid>https://maxime-cls.github.io/elastic-tutorial/elastic/d%C3%A9butant/lab_logs/</guid><description>Objectif : Dans ce laboratoire, vous explorerez la facilité avec laquelle vous pouvez lire les fichiers journaux NGINX avec Filebeat et les indexer dans Elasticsearch. Vous explorerez également les tableaux de bord Kibana et verrez avec quelle facilité vous pouvez surveiller les journaux NGINX.
Déployer un agent beats mkdir -P beats/conf
vim beats/beats-docker.yml
beats-docker.yml
version: '2.2'
services:
filebeat:
image: docker.elastic.co/beats/filebeat:${VERSION}
container_name: filebeat
restart: unless-stopped
entrypoint: &amp;quot;filebeat -e -strict.perms=false&amp;quot;
user: root
volumes:
- &amp;quot;.</description></item><item><title>Privilèges</title><link>https://maxime-cls.github.io/elastic-tutorial/elastic/%C3%A9l%C3%A9mentaire/security/</link><pubDate>Fri, 26 Jun 2020 15:17:20 +0200</pubDate><guid>https://maxime-cls.github.io/elastic-tutorial/elastic/%C3%A9l%C3%A9mentaire/security/</guid><description>Roles Kibana Les rôles sont un ensemble de privilèges qui vous permettent d&amp;rsquo;effectuer des actions dans Kibana et Elasticsearch. Les utilisateurs ne reçoivent pas directement de privilèges, mais se voient plutôt attribuer un ou plusieurs rôles qui décrivent le niveau d&amp;rsquo;accès souhaité. Lorsque vous attribuez plusieurs rôles à un utilisateur, ce dernier reçoit une union des privilèges des rôles. Cela signifie que vous ne pouvez pas réduire les privilèges d&amp;rsquo;un utilisateur en lui attribuant un rôle supplémentaire.</description></item><item><title>Lab - Metrics</title><link>https://maxime-cls.github.io/elastic-tutorial/elastic/d%C3%A9butant/lab_metrics/</link><pubDate>Fri, 26 Jun 2020 15:17:20 +0200</pubDate><guid>https://maxime-cls.github.io/elastic-tutorial/elastic/d%C3%A9butant/lab_metrics/</guid><description>Objectif : Dans ce laboratoire, vous explorerez la facilité avec laquelle vous pouvez obtenir des métriques système et NGINX avec Metricbeat et les indexer dans Elasticsearch. Vous explorerez également les tableaux de bord Kibana et verrez avec quelle facilité vous pouvez surveiller ces métriques.
Déployer un agent beats Ajoutez le service Metricbeat à la suite du service Beats
vim beats/beats-docker.yml
beats-docker.yml
version: '2.2'
services:
filebeat:
image: docker.elastic.co/beats/filebeat:${VERSION}
container_name: filebeat
restart: unless-stopped
entrypoint: &amp;quot;filebeat -e -strict.</description></item><item><title>Lab - APM</title><link>https://maxime-cls.github.io/elastic-tutorial/elastic/d%C3%A9butant/lab_apm/</link><pubDate>Fri, 26 Jun 2020 15:17:20 +0200</pubDate><guid>https://maxime-cls.github.io/elastic-tutorial/elastic/d%C3%A9butant/lab_apm/</guid><description>Serveur APM Objectif : Dans ce laboratoire, vous apprendrez comment il est facile d&amp;rsquo;utiliser APM pour instrumenter les applications afin de collecter des informations détaillées sur les performances ainsi que les erreurs et les envoyer à votre déploiement Elasticsearch. Vous explorerez également l&amp;rsquo;application APM Kibana et verrez avec quelle facilité vous pouvez surveiller les performances des applications.
Ajoutez le service APM ci-dessous dans le fichier elastic-docker-tls.yml :
apm-server:
image: docker.</description></item><item><title>Lab - Uptime</title><link>https://maxime-cls.github.io/elastic-tutorial/elastic/d%C3%A9butant/lab_uptime/</link><pubDate>Fri, 26 Jun 2020 15:17:20 +0200</pubDate><guid>https://maxime-cls.github.io/elastic-tutorial/elastic/d%C3%A9butant/lab_uptime/</guid><description>Objectif : Dans ce laboratoire, vous explorerez la facilité avec laquelle vous pouvez obtenir des métriques des disponibilités des services avec Heratbeat et les indexer dans Elasticsearch. Vous explorerez également les tableaux de bord Kibana et verrez avec quelle facilité vous pouvez surveiller ces métriques.
Déployer un agent beats Ajoutez le service Heartbeat à la suite du service Beats
vim beats/beats-docker.yml
beats-docker.yml
version: '2.2'
services:
filebeat:
image: docker.elastic.co/beats/filebeat:${VERSION}
container_name: filebeat
restart: unless-stopped
entrypoint: &amp;quot;filebeat -e -strict.</description></item></channel></rss>